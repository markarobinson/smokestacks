@model smokeStacks.Models.Room
@{
    ViewBag.Title = "Chat";
}

<h2>@Html.DisplayFor(model => model.RoomName)
</h2>
<div class="container-fluid">
    <div class="row">
        <div id="chatWindow" class="col-md-4">
            <ul id="discussion"></ul>
        </div>

        <div id="userList" class="col-md-4">
            <strong>Users:</strong>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8"></div>
        <input type="text" id="message" spellcheck="true" />
            <input type="button" id="sendmessage" value="Send" />
            <input type="hidden" id="displayname" />
        </div>
</div>



 

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;

        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message, room) {
            // Add the message to the page.

            if (room == "@Model.RoomID") {

                $('#discussion').append('<li>' + currentTime.getHours() + ':' + currentTime.getMinutes() + ':' + currentTime.getSeconds() + ' <strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
                $("#chatWindow").scrollTop($("#chatWindow")[0].scrollHeight);


            }

        };

        // Get the user name and store it to prepend to messages.
        $('#displayname').val(prompt('Enter your name:', ''));
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                if ($('#message').val()) {
                    chat.server.send($('#displayname').val(), $('#message').val(), "@Model.RoomID");
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                }
                else {
                    return;
                }
            });

            $(document).keypress(function (e) {
                if (e.which == 13) {
                    if ($('#message').val()) {
                        chat.server.send($('#displayname').val(), $('#message').val(), "@Model.RoomID");
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    }
                    else {
                        return;
                    }
                }
            });

        });
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    var currentTime = new Date();

    function updateTime() {
        currentTime = new Date();
    }
    setInterval(updateTime, 1000);
</script>
}